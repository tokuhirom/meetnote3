package meetnote3.model

import meetnote3.utils.getHomeDirectory
import meetnote3.utils.mkdirP

import kotlinx.datetime.Clock
import kotlinx.datetime.TimeZone
import kotlinx.datetime.toLocalDateTime

fun generateTimestamp(): String {
    val now = Clock.System.now().toLocalDateTime(TimeZone.currentSystemDefault())
    val dateTimeString = now.toString().replace(":", "-")
    return dateTimeString
}

data class DocumentDirectory(
    val dir: String,
) {
    // Temporary audio file. Recorded voice from the microphone.
    // This file is removed after the mixing process.
    // I mean, mixedFilePath is created by mixing micFilePath and screenFilePath.
    fun micFilePath() = "$dir/mic.m4a"

    // ditto.
    fun screenFilePath() = "$dir/screen.m4a"

    // This file never remove automatically.
    fun mixedFilePath() = "$dir/mixed.m4a"

    // This file is generated by the whisper-cpp.
    // And it's generated from the mixedFilePath.
    fun lrcFilePath() = "$dir/transcribed.lrc"

    // This file is converted from the mixedFilePath.
    // Since the whisper-cpp requires the wave file.
    // We need to remove this after the transcribing process.
    fun waveFilePath() = "$dir/mixed.wav"

    fun summaryFilePath() = "$dir/summary.txt"

    fun summarizerFilePath() = "$dir/summarizer.py"

    companion object {
        fun create(): DocumentDirectory = DocumentDirectory(baseDirecory())

        fun baseDirecory(): String {
            val home = getHomeDirectory()
            val dateTimeString = generateTimestamp()
            val directory = "$home/Documents/MeetNote3/$dateTimeString"
            mkdirP(directory)
            return directory
        }
    }
}
