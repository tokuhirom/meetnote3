import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    kotlin("multiplatform") version "2.0.0"
    kotlin("plugin.power-assert") version "2.0.0"
    id("io.gitlab.arturbosch.detekt")
    id("org.jlleitschuh.gradle.ktlint")
}

kotlin {
    macosArm64("native") {
        binaries {
            executable()
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation(project.dependencies.platform("io.ktor:ktor-bom:2.3.12"))
                implementation("io.ktor:ktor-client-core")
                implementation("io.ktor:ktor-client-darwin")

                implementation("com.squareup.okio:okio:3.9.0")
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1")
                implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.6.0")
            }
        }
    }
}

// ./gradlew :capjoy:runDebug -PexecArgs="displays"
tasks.register<Exec>("runDebug") {
    dependsOn("linkDebugExecutableNative")
    val arguments = project.findProperty("execArgs")?.toString()?.split(" ") ?: listOf()
    args(arguments)
    environment("CAPJOY_GRADLE_RUN_DEBUG", "true")
    executable = file("$buildDir/bin/native/debugExecutable/meetnote3.kexe").absolutePath
    standardInput = System.`in`
}

tasks.register("generateGpt2Kt") {
    doLast {
        val sourceFile = file("src/commonMain/resources/summarize-gpt2.py")
        val targetFile = file("src/nativeMain/kotlin/meetnote3/python/Gpt2.kt")
        val content = sourceFile.readText()

        val kotlinFileContent = listOf(
            "// This file was auto generated by build.gradle.kts",
            "package meetnote3.python\n",
            "const val SUMMARIZE_GPT2 = \"\"\"",
            content,
            "\"\"\"",
        ).joinToString("\n")

        targetFile.parentFile.mkdirs()
        targetFile.writeText(kotlinFileContent)
    }
}

tasks.withType<KotlinCompile> {
    dependsOn("generateGpt2Kt")
}
